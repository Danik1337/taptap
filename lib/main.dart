import 'dart:async';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import 'package:firebase_core/firebase_core.dart';import 'package:firebase_database/firebase_database.dart';import 'package:firebase_core/firebase_core.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_state_manager/src/simple/get_state.dart';import 'controller/telegram.dart';import 'firebase_options.dart';void main() async {   await Firebase.initializeApp(     options: DefaultFirebaseOptions.currentPlatform,  );  runApp(const MyApp());}class MyApp extends StatelessWidget {  const MyApp({super.key});  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Flutter Demo',      theme: ThemeData(        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple, ),        useMaterial3: true,      ),      home: const MyHomePage(title: 'Flutter Demo Home Page'),    );  }}class MyHomePage extends StatefulWidget {  const MyHomePage({super.key, required this.title});  final String title;  @override  State<MyHomePage> createState() => _MyHomePageState();}class _MyHomePageState extends State<MyHomePage> {  String username = "xz";  String id = "xz";  CollectionReference? _collection;  String fimozUrl = "https://optim.tildacdn.com/tild3634-3566-4962-b535-373935646462/-/resize/596x/-/format/webp/design_2-vmake_1.jpg";  @override  void initState() {    super.initState();    username = controller['username'].toString();    id = controller['id'].toString();    _collection = FirebaseFirestore.instance.collection(id);  }  int score = 0;  //TelegramController.initTelegramWebApp().toString()  var controller = TelegramController.initTelegramWebApp();  double sizeIcon(BuildContext context) {    double result = MediaQuery        .sizeOf(context)        .width * 0.06;    return result;  }  @override  Widget build(BuildContext context) {    return Scaffold(        bottomNavigationBar: BottomNavigationBar(          currentIndex: 0,          selectedItemColor: Colors.black,          unselectedItemColor: Colors.black,          selectedLabelStyle: TextStyle(              color: Colors.black, fontSize: sizeIcon(context) / 2),          unselectedLabelStyle: TextStyle(              color: Colors.black, fontSize: sizeIcon(context) / 2),          items: <BottomNavigationBarItem>[            BottomNavigationBarItem(                icon: Container(height: sizeIcon(context),                    child: Image.asset("lib/assets/icons/penis.png")),                label: 'Fimoz',                backgroundColor: Colors.red            ),            BottomNavigationBarItem(              icon: Container(height: sizeIcon(context),                  child: Image.asset("lib/assets/icons/task.png")),              label: 'Task',            ),            BottomNavigationBarItem(              icon: Container(height: sizeIcon(context),                  child: Image.asset("lib/assets/icons/friends.png")),              label: 'Frens',            ),          ],        ),        body: Column(          children: [            Padding(padding: EdgeInsets.only(bottom: MediaQuery                .sizeOf(context)                .height * 0.1)),            CircleAvatar(child: Image.network(                "https://avatars.githubusercontent.com/u/70381528?s=48&v=4")),            Center(child: Text(username)),            Row(    mainAxisAlignment: MainAxisAlignment.center,              children: [                Text("Score: "),                StreamBuilder(                    stream: FirebaseFirestore.instance.collection(id).snapshots(),                    builder: (context, snapshot) {                      if (snapshot.hasError){    return Center(    child: CircularProgressIndicator());                      };                      if (snapshot.hasData && snapshot.data!.size>0) {                        score = snapshot.data!.docs[0]["score"];                        return Text(snapshot.data!.docs[0]["score"].toString());                      }                      else{    return Center(    child: CircularProgressIndicator());                      }                    }                ),            ],            ),            GestureDetector(child:            Container(width: MediaQuery                .sizeOf(context)                .width * 0.6,                height: MediaQuery                    .sizeOf(context)                    .height * 0.4,                child: Image.network(fimozUrl)),                onTap: () {                  setState(() async {                    score++;                    if (score >= 100) {                      fimozUrl =                      "https://i.ibb.co/8KCdMRK/image-removebg-preview.png";                    }                    var snapshot = await FirebaseFirestore.instance.collection(                        id).get();                    for (var doc in snapshot.docs) {                      await doc.reference.delete();                    }                    _collection?.doc("пидорасы").set({"score": score});                  }                  );                }            ),          ],        ));  }}